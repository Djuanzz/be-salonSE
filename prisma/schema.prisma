// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  fullname   String   
  email      String   @unique
  password   String
  phone      String
  role       Role     @default(USER)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?

  @@map(name: "users")
  reviews Review[]
  reservations Reservation[]
}

model Review {
  id String @id @default(uuid())
  user_id String
  star Int
  comment String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?

  @@map(name: "reviews")

  user User @relation(fields: [user_id], references: [id])
}

model Reservation {
  id String @id @default(uuid())
  user_id String
  branch_id String
  customer_name String
  customer_phone String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?

  @@map(name: "reservations")

  user User @relation(fields: [user_id], references: [id])
  branch Branch @relation(fields: [branch_id], references: [id])
}

model Service {
  id String @id @default(uuid())
  name String
  price Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?

  @@map(name: "services")
  branch_services BranchService[]
}

model Branch {
  id String @id @default(uuid())
  name String
  address String
  open_time String
  close_time String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?

  @@map(name: "branches")
  branch_services BranchService[]
  reservations Reservation[]
}

model BranchService {
  id String @id @default(uuid())
  branch_id String
  service_id String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?

  @@map(name: "branch_services")

  branch Branch @relation(fields: [branch_id], references: [id])
  service Service @relation(fields: [service_id], references: [id])
}

enum Role {
  ADMIN
  USER
}